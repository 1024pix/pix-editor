---
version: 2.1

orbs:
  browser-tools: circleci/browser-tools@1.4.8

executors:
  node-docker:
    parameters:
      node-version:
        # renovate datasource=node-version depName=node
        default: 20.11.0
        type: string
    docker:
      - image: cimg/node:<<parameters.node-version>>
    resource_class: small
  node-redis-postgres-docker:
    parameters:
      node-version:
        # renovate datasource=node-version depName=node
        default: 20.11.0
        type: string
    docker:
      - image: cimg/node:<<parameters.node-version>>
      - image: postgres:14.10-alpine
        environment:
          POSTGRES_USER: circleci
          POSTGRES_HOST_AUTH_METHOD: trust
      - image: redis:7.2.3-alpine
    resource_class: small
  node-browsers-docker:
    parameters:
      node-version:
        # renovate datasource=node-version depName=node
        default: 20.11.0
        type: string
    docker:
      - image: cimg/node:<<parameters.node-version>>-browsers
        environment:
          JOBS: 2
    resource_class: small
  node-browsers-redis-postgres-docker:
    parameters:
      node-version:
        # renovate datasource=node-version depName=node
        default: 20.11.0
        type: string
    docker:
      - image: cimg/node:<<parameters.node-version>>-browsers
      - image: postgres:14.10-alpine
        environment:
          POSTGRES_USER: circleci
          POSTGRES_HOST_AUTH_METHOD: trust
      - image: redis:7.2.3-alpine
    resource_class: medium
  playwright-redis-postgres-docker:
    parameters:
      playwright-version:
        # renovate datasource=npm depName=@playwright/test
        default: 1.41.2
        type: string
    docker:
      - image: mcr.microsoft.com/playwright:v<<parameters.playwright-version>>-focal
      - image: postgres:14.10-alpine
        environment:
          POSTGRES_USER: circleci
          POSTGRES_HOST_AUTH_METHOD: trust
      - image: redis:7.2.3-alpine@sha256:3ce533b2b057f74b235d1d8697ae08b1b6ff0a5e16827ea6a377b6365693c7ed
    resource_class: medium

jobs:
  pix-editor-test:
    executor: node-browsers-docker
    working_directory: ~/pix-editor/pix-editor
    steps:
      - attach_workspace:
          at: ~/pix-editor
      - browser-tools/install-chrome
      - run: cat package*.json > cachekey
      - restore_cache:
          keys:
            - v2-pix-editor-npm-{{ checksum "cachekey" }}
      - run: npm ci
      - save_cache:
          key: v2-pix-editor-npm-{{ checksum "cachekey" }}
          paths:
            - ~/.npm
      - run:
          name: Lint
          command: npm run lint
      - run:
          name: Test
          command: |
            npm test

  checkout:
    executor: node-docker
    working_directory: ~/pix-editor
    steps:
      - checkout
      - persist_to_workspace:
          root: ~/pix-editor
          paths:
            - .

  api_build_and_test:
    executor: node-redis-postgres-docker
    working_directory: ~/pix-editor/api
    steps:
      - attach_workspace:
          at: ~/pix-editor
      - run: cat package*.json > cachekey
      - restore_cache:
          keys:
            - v7-api-npm-{{ checksum "cachekey" }}
      - run: npm ci
      - save_cache:
          key: v7-api-npm-{{ checksum "cachekey" }}
          paths:
            - ~/.npm
      - run:
          command: |
            npm run lint
            npm test
          environment:
            TEST_DATABASE_URL: postgres://circleci@localhost:5432/circleci

  scripts_test:
    executor: node-docker
    working_directory: ~/pix-editor/scripts
    steps:
      - attach_workspace:
          at: ~/pix-editor
      - run: cat package*.json > cachekey
      - restore_cache:
          keys:
            - v1-scripts-npm-{{ checksum "cachekey" }}
      - run: npm ci
      - save_cache:
          key: v1-scripts-npm-{{ checksum "cachekey" }}
          paths:
            - ~/.npm
      - run:
          command: |
            npm run lint
            npm test

  e2e_test:
    executor: playwright-redis-postgres-docker
    working_directory: ~/pix-editor/pix-editor
    steps:
      - attach_workspace:
          at: ~/pix-editor

      - run:
          name: Compute cachekey for npm
          working_directory: ~/pix-editor
          command: cat pix-editor/package*.json api/package*.json > cachekey
      - restore_cache:
          name: Restore npm cache
          keys:
            - v8-e2e-npm-{{ checksum "~/pix-editor/cachekey" }}

      - run:
          name: Install Pix Editor
          command: npm ci

      - run:
          name: Start Pix Editor
          environment:
            JOBS: 2
          background: true
          command: npm start

      - run:
          name: Install Pix Editor API
          working_directory: ~/pix-editor/api
          command: npm ci

      - save_cache:
          name: Save npm cache
          key: v8-e2e-npm-{{ checksum "~/pix-editor/cachekey" }}
          paths:
            - ~/.npm

      - run:
          name: Install and start Pix Editor API
          working_directory: ~/pix-editor/api
          environment:
            DATABASE_URL: 'postgres://circleci@localhost:5432/circleci'
          background: true
          command: npm run db:reset && npm start

      - run:
          name: Wait for Pix Editor API to be ready...
          command: curl --fail --ipv4 --retry 9 --retry-connrefused --retry-delay 10 --silent http://localhost:3002/api > /dev/null

      - run:
          name: Wait for Pix Editor to be ready...
          command: curl --fail --ipv4 --retry 6 --retry-connrefused --retry-delay 10 --silent http://localhost:4300/api > /dev/null

      - run:
          name: Run E2E tests
          environment:
            PLAYWRIGHT_JUNIT_OUTPUT_NAME: e2e-junit-results.xml
          command: npx playwright test --reporter=junit

      - store_test_results:
          path: e2e-junit-results.xml
      - store_artifacts:
          path: test-results/

workflows:
  version: 2
  build_and_test:
    jobs:
      - checkout
      - api_build_and_test:
          requires:
            - checkout
      - pix-editor-test:
          requires:
            - checkout
      - e2e_test:
          requires:
            - checkout
      - scripts_test:
          requires:
            - checkout
