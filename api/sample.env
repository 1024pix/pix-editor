# This file is the minimal confuguration file used by Dotenv to define the
# environment variables on localhost.
#
# Instructions:
#   1. copy this file as `.env`
#   2. edit the `.env` file with working values
#   3. uncomment the lines to activate or configure associated features
#
# Sections (displayed in sorted in alphabtic order):
#   - databases
#   - learning content
#   - logging
#   - storage
#   - pix api
#
# Line size max: 80 characters.
#
# =========
# DATABASES
# =========

# URL of the PostgreSQL databse used for storing users data (filled-in or
# generated).
#
# If not present, the application will crash during API boostrap.
#
# presence: required
# type: Url
# default: none
DATABASE_URL=postgresql://postgres@localhost:5433/pix_lcms

# URL of the PostgreSQL databse used for API local testing.
#
# If not present, the tests will fail.
#
# presence: required
# type: Url
# default: none
TEST_DATABASE_URL=postgresql://postgres@localhost:5433/pix_lcms_test

# ================
# LEARNING CONTENT
# ================

# API key provided in your Airtable personal account used for fetching learning
# content.
#
# If not present the application will crash during data fetching.
#
# presence: required
# type: String
# default: none
AIRTABLE_API_KEY=

# API token provided in your Airtable database configuration used for fetching
# learning content.
#
# If not present the application will crash during data fetching.
#
# presence: required
# type: String
# default: none
AIRTABLE_BASE=


# API token provided in your Airtable database configuration used for storing notes
#
# If not present the application will crash during saving changes.
#
# presence: required
# type: String
# default: none
AIRTABLE_EDITOR_BASE=


# Airtable url used to redirect to airtable entry
#
# If not present the application will not be able to open airtable record.
#
# presence: required
# type: String
# default: none
AIRTABLE_URL=https://airtable.com/


# Airtable id of challenges table
#
# If not present the application will not be able to open airtable challenges.
#
# presence: required
# type: String
# default: none
TABLE_CHALLENGES=


# Airtable id of skills table
#
# If not present the application will not be able to open airtable skills.
#
# presence: required
# type: String
# default: none
TABLE_SKILLS=


# Airtable id of tubes table
#
# If not present the application will not be able to open airtable tubes.
#
# presence: required
# type: String
# default: none
TABLE_TUBES=


# =======
# LOGGING
# =======

# Enable or disable the logging of the API.
#
# presence: optional
# type: Boolean
# default: `false`
LOG_ENABLED=true

# Enable or disable the logging of the API.
#
# presence: optional
# type: String
# default: "info"
# LOG_LEVEL=debug

# =======
# STORAGE
# =======


# S3 compatible bucket url used to store attachments.
#
# If not present the application will crash during saving challenge with attachment.
#
# presence: required
# type: String
# default: none
STORAGE_POST=


# S3 compatible tenant id used to store attachments.
#
# If not present the application will crash during saving challenge with attachment.
#
# presence: required
# type: String
# default: none
STORAGE_TENANT=


# S3 compatible bucket username used to store attachments.
#
# If not present the application will crash during saving challenge with attachment.
#
# presence: required
# type: String
# default: none
STORAGE_USER=


# S3 compatible bucket password used to store attachments.
#
# If not present the application will crash during saving challenge with attachment.
#
# presence: required
# type: String
# default: none
STORAGE_PASSWORD=


# url used to generate s3 compatible token.
#
# If not present the application will crash during saving challenge with attachment.
#
# presence: required
# type: String
# default: none
STORAGE_AUTH=


# name of the storage bucket.
#
# If not present the application will crash during saving challenge with attachment.
#
# presence: required
# type: String
# default: none
STORAGE_BUCKET=


# =======
# PIX API
# =======


# Pix api base url used to connect to pix api to refresh the cache.
#
# If not present the application cannot refresh the cache.
#
# presence: required
# type: Url
# default: none
PIX_API_BASEURL=

# Pix api user email used to connect to pix api to refresh the cache.
# The user shall have admin rights.
#
# If not present the application cannot refresh the cache.
#
# presence: required
# type: String
# default: none
PIX_API_USER_EMAIL=


# Pix api user password used to connect to pix api to refresh the cache.
# The user shall have admin rights.
#
# If not present the application cannot refresh the cache.
#
# presence: required
# type: String
# default: none
PIX_API_USER_PASSWORD=


# =======
# Schedule jobs
# =======

# URL of the Redis server used for handling scheduled jobs.
#
# If not present, the application will not create periodic releases.
#
# presence: optional
# type: Url
# default: none
REDIS_URL=redis://localhost:6380


# Cron date/time scheduled time to create periodic release.
# Europe/Paris timezone is used as reference.
#
# If not present, the application will not create periodic releases.
#
# presence: optional
# type: Cron expression
# default: none
CREATE_RELEASE_TIME=0 0 * * *
