import { Challenge } from '../../../../../lib/domain/models/index.js';

export function buildChallengeDatasourceObject({
  id = 'persistant id',
  type = Challenge.TYPES.QCM,
  t1Status = true,
  t2Status = false,
  t3Status = true,
  status = Challenge.STATUSES.VALIDE,
  skillId = 'recUDrCWD76fp5MsE',
  timer = 1234,
  competenceId = 'recsvLz0W2ShyfD63',
  embedUrl = 'https://github.io/page/epreuve.html',
  embedHeight = 500,
  format = 'mots',
  autoReply = false,
  locales = [],
  focusable = false,
  skills = ['recordId generated by Airtable'],
  genealogy = Challenge.GENEALOGIES.PROTOTYPE,
  pedagogy = Challenge.PEDAGOGIES.Q_SITUATION,
  author = ['SPS'],
  declinable = Challenge.DECLINABLES.FACILEMENT,
  version = 1,
  alternativeVersion = 2,
  accessibility1 = Challenge.ACCESSIBILITY1.OK,
  accessibility2 = 'RAS',
  spoil = 'Non Sp',
  responsive = 'non',
  geography = 'France',
  files = [{ fileId: 'attachment recordId generated by Airtable', localizedChallengeId: id }],
  airtableId = 'airtable id',
  delta = 0.2,
  alpha = 0.5,
  updatedAt = '2021-10-04',
  createdAt = '1986-07-14',
  validatedAt = '2023-02-02T14:17:30.820Z',
  archivedAt = '2023-03-03T10:47:05.555Z',
  madeObsoleteAt = '2023-04-04T10:47:05.555Z',
  shuffled = false,
  contextualizedFields = ['instruction', 'illustration'],
} = {}) {
  return {
    id,
    type,
    t1Status,
    t2Status,
    t3Status,
    status,
    skillId: skillId,
    timer,
    competenceId,
    embedUrl,
    embedHeight,
    format,
    files,
    autoReply,
    locales,
    focusable,
    airtableId,
    skills,
    genealogy,
    pedagogy,
    author,
    declinable,
    version,
    alternativeVersion,
    accessibility1,
    accessibility2,
    spoil,
    responsive,
    geography,
    delta,
    alpha,
    updatedAt,
    createdAt,
    validatedAt,
    archivedAt,
    madeObsoleteAt,
    shuffled,
    contextualizedFields,
  };
}
